---------------------------------------------------------------------------
# When Statement
# ---------------------------------------------------------------------------

# Ansible facts and vars like ansible_os_family can be used directly in conditionals without double curly braces. 
# You can also use parentheses to group conditions
tasks:
  - name: "shut down Debian flavored systems"
    command: /sbin/shutdown -t now
    when: ansible_os_family == "Debian"

# You can also use parentheses to group conditions:
tasks:
  - name: "shut down CentOS 6 and Debian 7 systems"
    command: /sbin/shutdown -t now
    when: (ansible_distribution == "CentOS" and ansible_distribution_major_version == "6") or
          (ansible_distribution == "Debian" and ansible_distribution_major_version == "7")

# Multiple conditions that all need to be true (a logical ‘and’) can also be specified as a list:

tasks:
  - name: "shut down CentOS 6 systems"
    command: /sbin/shutdown -t now
    when:
      - ansible_distribution == "CentOS"
      - ansible_distribution_major_version == "6"

# A number of Jinja2 “filters” can also be used in when statements, 
# some of which are unique and provided by Ansible. 
# Suppose we want to ignore the error of one statement and then decide
# to do something conditionally based on success or failure:

tasks:
  - command: /bin/false
    register: result
    ignore_errors: True

  - command: /bin/something
    when: result|failed

  # filters have been updated in 2.1 so both success and succeeded work (fail/failed, etc).
  - command: /bin/something_else
    when: result|succeeded

  - command: /bin/still/something_else
    when: result|skipped

