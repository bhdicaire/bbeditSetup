<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<!-- Copy this file to /Library/Application Support/BBEdit/Language Modules/
     And make the directories if they don't already exist. -->
<plist version="1.0">
<dict>
	<key>BBEditDocumentType</key>
	<string>CodelessLanguageModule</string>
	<key>BBLMLanguageDisplayName</key>
	<string>AMPL</string>
	<key>BBLMLanguageCode</key>
	<string>AMPL</string>
	<key>BBLMColorsSyntax</key>
	<true/>
	<key>BBLMScansFunctions</key>
	<true/>
	<key>BBLMIsCaseSensitive</key>
	<true/>
	<key>BBLMKeywordList</key>
	<array>
		<string>.astatus</string>
		<string>.body</string>
		<string>.dinit</string>
		<string>.dinit0</string>
		<string>.dual</string>
		<string>.init</string>
		<string>.init0</string>
		<string>.lb</string>
		<string>.lb0</string>
		<string>.lb1</string>
		<string>.lb2</string>
		<string>.lbs</string>
		<string>.ldual</string>
		<string>.lrc</string>
		<string>.lslack</string>
		<string>.rc</string>
		<string>.relax</string>
		<string>.slack</string>
		<string>.sstatus</string>
		<string>.status</string>
		<string>.ub</string>
		<string>.ub0</string>
		<string>.ub1</string>
		<string>.ub2</string>
		<string>.ubs</string>
		<string>.udual</string>
		<string>.urc</string>
		<string>.uslack</string>
		<string>.val</string>
		<string>Beta</string>
		<string>Cauchy</string>
		<string>Current</string>
		<string>Exponential</string>
		<string>Gamma</string>
		<string>IN</string>
		<string>INOUT</string>
		<string>Infinity</string>
		<string>Initial</string>
		<string>Irand224</string>
		<string>LOCAL</string>
		<string>Normal</string>
		<string>Normal01</string>
		<string>OUT</string>
		<string>Poisson</string>
		<string>Uniform</string>
		<string>Uniform01</string>
		<string>_CONS</string>
		<string>_ENVS</string>
		<string>_FUNCS</string>
		<string>_OBJS</string>
		<string>_PARS</string>
		<string>_PROBS</string>
		<string>_SETS</string>
		<string>_VARS</string>
		<string>_ampl_elapsed_time</string>
		<string>_ampl_system_time</string>
		<string>_ampl_time</string>
		<string>_ampl_user_time</string>
		<string>_cconname</string>
		<string>_con</string>
		<string>_conname</string>
		<string>_nccons</string>
		<string>_ncons</string>
		<string>_nobjs</string>
		<string>_nvars</string>
		<string>_obj</string>
		<string>_objname</string>
		<string>_scvar</string>
		<string>_shell_elapsed_time</string>
		<string>_shell_system_time</string>
		<string>_shell_time</string>
		<string>_shell_user_time</string>
		<string>_snbvars</string>
		<string>_snccons</string>
		<string>_snivars</string>
		<string>_snlcc</string>
		<string>_snlnc</string>
		<string>_snnlcc</string>
		<string>_snnlcons</string>
		<string>_snnlnc</string>
		<string>_snnlobjs</string>
		<string>_snnlv</string>
		<string>_snzcons</string>
		<string>_snzobjs</string>
		<string>_solve_elapsed_time</string>
		<string>_solve_system_time</string>
		<string>_solve_time</string>
		<string>_solve_user_time</string>
		<string>_total_shell_elapsed_time</string>
		<string>_total_shell_system_time</string>
		<string>_total_shell_time</string>
		<string>_total_shell_user_time</string>
		<string>_total_solve_elapsed_time</string>
		<string>_total_solve_system_time</string>
		<string>_total_solve_time</string>
		<string>_total_solve_user_time</string>
		<string>_var</string>
		<string>_varname</string>
		<string>abs</string>
		<string>acos</string>
		<string>acosh</string>
		<string>add</string>
		<string>alias</string>
		<string>all</string>
		<string>and</string>
		<string>arc</string>
		<string>arity</string>
		<string>asin</string>
		<string>asinh</string>
		<string>atan</string>
		<string>atan2</string>
		<string>atanh</string>
		<string>boolean</string>
		<string>break</string>
		<string>by</string>
		<string>call</string>
		<string>card</string>
		<string>cd</string>
		<string>ceil</string>
		<string>char</string>
		<string>check</string>
		<string>circular</string>
		<string>close</string>
		<string>coefficient</string>
		<string>commands</string>
		<string>complements</string>
		<string>contains</string>
		<string>continue</string>
		<string>cos</string>
		<string>cover</string>
		<string>cross</string>
		<string>csvdisplay</string>
		<string>csvdisplay_precision</string>
		<string>csvdisplay_round</string>
		<string>ctime</string>
		<string>data</string>
		<string>default</string>
		<string>defaultsym</string>
		<string>delete</string>
		<string>diff</string>
		<string>dimen</string>
		<string>display</string>
		<string>display_1col</string>
		<string>display_eps</string>
		<string>display_max_2d_cols</string>
		<string>display_precision</string>
		<string>display_round</string>
		<string>display_transpose</string>
		<string>display_width</string>
		<string>div</string>
		<string>drop</string>
		<string>else</string>
		<string>end</string>
		<string>environ</string>
		<string>exists</string>
		<string>exit</string>
		<string>exp</string>
		<string>expand</string>
		<string>expand_precision</string>
		<string>expand_round</string>
		<string>first</string>
		<string>fix</string>
		<string>floor</string>
		<string>for</string>
		<string>forall</string>
		<string>from</string>
		<string>gsub</string>
		<string>gutter_width</string>
		<string>ichar</string>
		<string>if</string>
		<string>in</string>
		<string>include</string>
		<string>indexarity</string>
		<string>integer</string>
		<string>inter</string>
		<string>interval</string>
		<string>last</string>
		<string>length</string>
		<string>less</string>
		<string>let</string>
		<string>load</string>
		<string>log</string>
		<string>log10</string>
		<string>logical</string>
		<string>match</string>
		<string>max</string>
		<string>maximize</string>
		<string>member</string>
		<string>min</string>
		<string>minimize</string>
		<string>mod</string>
		<string>model</string>
		<string>next</string>
		<string>nextw</string>
		<string>node</string>
		<string>not</string>
		<string>num</string>
		<string>num0</string>
		<string>obj</string>
		<string>objective</string>
		<string>objective_precision</string>
		<string>omit_zero_cols</string>
		<string>omit_zero_rows</string>
		<string>option</string>
		<string>or</string>
		<string>ord</string>
		<string>ord0</string>
		<string>ordered</string>
		<string>output_precision</string>
		<string>param</string>
		<string>precision</string>
		<string>prev</string>
		<string>prevw</string>
		<string>print</string>
		<string>print_precision</string>
		<string>print_round</string>
		<string>print_separator</string>
		<string>printf</string>
		<string>problem</string>
		<string>prod</string>
		<string>product</string>
		<string>purge</string>
		<string>quit</string>
		<string>read</string>
		<string>readfunction</string>
		<string>reat table</string>
		<string>redeclare</string>
		<string>reload</string>
		<string>remove</string>
		<string>repeat</string>
		<string>reset</string>
		<string>restore</string>
		<string>round</string>
		<string>set</string>
		<string>setof</string>
		<string>shell</string>
		<string>shell_exitcode</string>
		<string>show</string>
		<string>sin</string>
		<string>sinh</string>
		<string>solexpand</string>
		<string>solution</string>
		<string>solution_precision</string>
		<string>solution_round</string>
		<string>solve</string>
		<string>solve_exitcode</string>
		<string>solve_message</string>
		<string>solve_result</string>
		<string>solve_result_num</string>
		<string>sprintf</string>
		<string>sqrt</string>
		<string>sub</string>
		<string>subject</string>
		<string>substr</string>
		<string>suffix</string>
		<string>sum</string>
		<string>symbolic</string>
		<string>symdiff</string>
		<string>table</string>
		<string>tan</string>
		<string>tanh</string>
		<string>then</string>
		<string>time</string>
		<string>to</string>
		<string>trunc</string>
		<string>unfix</string>
		<string>union</string>
		<string>unload</string>
		<string>until</string>
		<string>update</string>
		<string>var</string>
		<string>while</string>
		<string>within</string>
		<string>write</string>
		<string>xref</string>
	</array>
	<key>BBLMSuffixMap</key>
	<array>
		<dict>
			<key>BBLMLanguageSuffix</key>
			<string>.run</string>
		</dict>
		<dict>
			<key>BBLMLanguageSuffix</key>
			<string>.mod</string>
		</dict>
		<dict>
			<key>BBLMLanguageSuffix</key>
			<string>.dat</string>
		</dict>
	</array>
	<key>Language Features</key>
	<dict>
		<key>Comment Pattern</key>
		<string>(?x:
			(?&gt;	\#		.*			$				) 
		)</string>
		<key>String Pattern</key>
		<string>(?x:
			(?&gt;	"	(?s: \\. | [^"] )*?		(?: " | $)	)	|
			(?&gt;	'	(?s: \\. | [^'] )*?		(?: ' | $)	)
		)</string>
		<key>Skip Pattern</key>
		<string>(?x:
			(?&gt;
				(?P&gt;comment) | (?P&gt;string)
			)
		)</string>
		<key>Identifier and Keyword Character Class</key>
		<string>0-9A-Z_a-z</string>
		<key>Function Pattern</key>
		<string>(?x:
			(?# AMPL doesn't have functions per-say, but I'd like for objectives and constraints to be treated as functions by BBEdit and show up in the function pop-up.)
			(?P&lt;function&gt;
				(?# Keywords for defining constraints and objectives)
				(?: 
					(?&gt;
						(?&gt; subject\sto ) | (?&gt; minimize ) | (?&gt; maximize )
					)
				)
				
				(?# Potential spaces or comments.)
				(?:
					(?&gt;
						(?&gt; \s+ ) | (?P&gt;comment) | (?P&gt;string)
					)
				)*

				(?# The name of the objective or constraint.)
				(?P&lt;function_name&gt;
					(?&gt; _* [A-Za-z] [A-Za-z0-9_]* )
				)
				
				(?# Potential spaces and comments.)
				(?:
					(?&gt;
						(?&gt; \s+ ) | (?P&gt;comment) | (?P&gt;string)
					)
				)*
				
				(?# Potential curly brackets that index over one or more sets. )
				(?P&lt;parens&gt;
					\{
						(?:
							(?&gt;
								(?&gt; [^'"{}]+ ) | (?P&gt;comment) | (?P&gt;string) | (?P&gt;parens)
							)
						)*
					\}
				)?
				
				(?# Potential spaces or comments.)
				(?:
					(?&gt;
						(?&gt; \s+ ) | (?P&gt;comment) | (?P&gt;string)
					)
				)*

				(?# The colon appears just before the formula. )
				:
				
				(?# The body of the formula can have spaces, comments, and anything besides a semicolon. )
				(?:
					(?&gt;
						(?&gt; \s+ ) | (?P&gt;comment) | (?P&gt;string) | 
						(?&gt; [^;]+ )
					)
				)*

				(?# The semicolon completes the formula. )
				;
			)
		)</string>
	</dict>
</dict>
</plist>
