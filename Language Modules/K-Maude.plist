{
	BBEditDocumentType = "CodelessLanguageModule";
	BBLMColorsSyntax = YES;
	BBLMIsCaseSensitive = YES;
	BBLMKeywordList = (
		mod,
		fmod,
		endm,
		endfm,
		is,
		view,
		endv,
		from,
		to,
		including,
		protecting,
		op,
		ops,
		var,
		vars,
		extending,
		sort,
		sorts,
		subsort,
		subsorts,
		eq,
		ceq,
		rl,
		crl,
		mb,
		cmb,
		reduce,
		red,
		rewrite,
		rew,
		parse,
		frewrite,
		frew,
		search,
		load,
		in,
		select,
		assoc,
		comm,
		idem,
		id,
		iter,
		"left-id",
		"right-id",
		strat,
		memo,
		prec,
		gather,
		format,
		ctor,
		frozen,
		poly,
		special,
		label,
		metadata,
		owise,
		nonexec,
		ditto,
		BOOL,
		INT,
		NAT,
		STRING,
		QID,
		CONVERSION,
		FLOAT,
		RAT,
		LIST,
		SET,
		MAP,
		Bool,
		Int,
		Float,
		Nat,
		Qid,
		Id,
		Zero,
		NzNat,
		NzInt,
		Rat,
		FiniteFloat,
		String,
		Char,
		and,
		or,
		not,
		implies,
		s,
		true,
		false,
		if,
		then,
		else,
		fi,
		"==",
		"=",
		"=/=",
		"=>",
		":",
		"->",
		".",
		"PL-BOOL",
		"PL-NAT",
		"PL-INT",
		"PL-RAT",
		"PL-FLOAT",
		"PL-STRING",
		"PL-RANDOM",
		"PL-COUNTER",
		"PL-ID",
		"PL-BUILTINS",
		"PL-QID",
		"PL-CONVERSION",
		"PL-EXT-BOOL",
		"K-TECHNIQUE",
		K,
		"K-MAP-EXTRAS",
		"K-SET-EXTRAS",
		"K-BAG-EXTRAS",
		"K-LIST-EXTRAS",
		"K-RULES",
		"K-CONFIG",
		"K-POLYMORPHIC-VARIABLES",
		"K-OPEN-CELLS",
		"K-QUOTED-LABELS",
		"K-CONTEXTS",
		"K-WHERE",
		"K-DESTRUCTORS",
		"K-PROPER",
		"K-SENTENCE",
		"K-STRICTNESS",
		KResult,
		KProper,
		NeK,
		List,
		Map,
		Set,
		Bag,
		"~>",
		"List{K}",
		".List{K}",
		".Set",
		".List",
		".Map",
		".Bag",
		"List{KProper}",
		"List{KResult}",
		"NeList{K}",
		"NeList{KResult}",
		KLabel,
		KResultLabel,
		KHybridLabel,
		",,",
		ListItem,
		SetItem,
		BagItem,
		MapItem,
		NeBag,
		NeList,
		NeSet,
		NeMap,
		CellLabel,
		sNat,
		"|->",
		"undef/",
		"-Set",
		"-Bag",
		inKList,
		getKLabel,
		"getList{K}",
		KSentence,
		KProperLabel,
		NeKProperList,
		freezer,
		freezeVar,
		kmod,
		endkm,
		syntax,
		"::=",
		"|",
		strict,
		seqstrict,
		latex,
		configuration,
		context,
		rule,
		macro,
		where,
		"?",
		HOLE,
		">...",
		"...</",
		"_",
	);
	BBLMLanguageCode = CK;
	"BBLMLanguageDisplayName" = "K-Maude";
	BBLMScansFunctions = NO;
	BBLMSuffixMap = (
		{
			BBLMLanguageSuffix = ".maude";
		},
		{
			BBLMLanguageSuffix = ".kmaude";
		},
		{
			BBLMLanguageSuffix = ".m";
		},
		{
			BBLMLanguageSuffix = ".k";
		},
	);
	"Language Features" = {
		"Close Block Comments" = "---)";
		"Close Parameter Lists" = "";
		"Close Statement Blocks" = endm;
		"Close Strings 1" = "\"";
		"End-of-line Ends Strings 1" = NO;
		"Escape Char in Strings 1" = "\\";
		"Identifier and Keyword Characters" = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-=>:.|~,{}?_";
		"Open Block Comments" = "---(";
		"Open Line Comments" = "---";
		"Open Parameter Lists" = "";
		"Open Statement Blocks" = is;
		"Open Strings 1" = "\"";
		"Prefix for Functions" = "";
		"Prefix for Procedures" = "";
		"Terminator for Prototypes 1" = ".";
		"Terminator for Prototypes 2" = "";
	};
}