<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN"
"http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>BBEditDocumentType</key>
    <string>CodelessLanguageModule</string>
    <key>BBLMColorsSyntax</key>
    <true />
    <key>BBLMIsCaseSensitive</key>
    <true />
    <key>BBLMPredefinedNameList</key>
    <array>
      <string>HIGH</string>
      <string>LOW</string>
      <string>INPUT</string>
      <string>OUTPUT</string>
      <string>DEC</string>
      <string>BIN</string>
      <string>HEX</string>
      <string>OCT</string>
      <string>BYTE</string>
      <string>PI</string>
      <string>HALF_PI</string>
      <string>TWO_PI</string>
      <string>LSBFIRST</string>
      <string>MSBFIRST</string>
      <string>CHANGE</string>
      <string>FALLING</string>
      <string>RISING</string>
      <string>DEFAULT</string>
      <string>EXTERNAL</string>
      <string>INTERNAL</string>
      <string>INTERNAL1V1</string>
      <string>INTERNAL2V56</string>
    </array>
    <key>BBLMKeywordList</key>
    <array>
      <string>+=</string>
      <string>+</string>
      <string>[]</string>
      <string>=</string>
      <string>&amp;</string>
      <string>|</string>
      <string>,</string>
      <string>//</string>
      <string>?:</string>
      <string>{}</string>
      <string>--</string>
      <string>/</string>
      <string>/*</string>
      <string>.</string>
      <string>==</string>
      <string>&lt;</string>
      <string>&lt;=</string>
      <string>++</string>
      <string>!=</string>
      <string>&lt;&lt;</string>
      <string>&lt;</string>
      <string>&lt;=</string>
      <string>&gt;&gt;</string>
      <string>&gt;</string>
      <string>&gt;></string>
      <string>&amp;&amp;</string>
      <string>!</string>
      <string>||</string>
      <string>-</string>
      <string>%</string>
      <string>*</string>
      <string>()</string>
      <string>&gt;&gt;</string>
      <string>&gt;&gt;</string>
      <string>;</string>
      <string>-=</string>

      <string>boolean</string>
      <string>break</string>
      <string>byte</string>
      <string>case</string>
      <string>char</string>
      <string>class</string>
      <string>continue</string>
      <string>default</string>
      <string>do</string>
      <string>double</string>
      <string>else</string>
      <string>false</string>
      <string>float</string>
      <string>for</string>
      <string>if</string>
      <string>int</string>
      <string>long</string>
      <string>new</string>
      <string>null</string>
      <string>private</string>
      <string>protected</string>
      <string>public</string>
      <string>return</string>
      <string>short</string>
      <string>signed</string>
      <string>static</string>
      <string>String</string>
      <string>switch</string>
      <string>this</string>
      <string>throw</string>
      <string>try</string>
      <string>true</string>
      <string>unsigned</string>
      <string>void</string>
      <string>while</string>
      <string>word</string>
      <string>const</string>
      <string>boolean</string>
      <string>byte</string>
      <string>char</string>
      <string>float</string>
      <string>int</string>
      <string>long</string>
      <string>word</string>
      <string>abs</string>
      <string>acos</string>
      <string>asin</string>
      <string>atan</string>
      <string>atan2</string>
      <string>ceil</string>
      <string>constrain</string>
      <string>cos</string>
      <string>degrees</string>
      <string>exp</string>
      <string>floor</string>
      <string>log</string>
      <string>map</string>
      <string>max</string>
      <string>min</string>
      <string>radians</string>
      <string>random</string>
      <string>randomSeed</string>
      <string>round</string>
      <string>sin</string>
      <string>sq</string>
      <string>sqrt</string>
      <string>tan</string>
      <string>bitRead</string>
      <string>bitWrite</string>
      <string>bitSet</string>
      <string>bitClear</string>
      <string>bit</string>
      <string>highByte</string>
      <string>lowByte</string>
      <string>analogReference</string>
      <string>analogRead</string>
      <string>analogWrite</string>
      <string>attachInterrupt</string>
      <string>detachInterrupt</string>
      <string>delay</string>
      <string>delayMicroseconds</string>
      <string>digitalWrite</string>
      <string>digitalRead</string>
      <string>interrupts</string>
      <string>millis</string>
      <string>micros</string>
      <string>noInterrupts</string>
      <string>noTone</string>
      <string>pinMode</string>
      <string>pulseIn</string>
      <string>shiftIn</string>
      <string>shiftOut</string>
      <string>tone</string>
      <string>Serial</string>
      <string>Serial1</string>
      <string>Serial2</string>
      <string>Serial3</string>
      <string>begin</string>
      <string>end</string>
      <string>peek</string>
      <string>read</string>
      <string>print</string>
      <string>println</string>
      <string>available</string>
      <string>flush</string>
      <string>setup</string>
      <string>loop</string>
    </array>
    <key>BBLMLanguageCode</key>
    <string>Adno</string>
    <key>BBLMLanguageDisplayName</key>
    <string>Arduino</string>
    <key>BBLMSuffixMap</key>
    <array>
      <dict>
        <key>BBLMLanguageSuffix</key>
        <string>.pde</string>
      </dict>
    </array>
    <key>BBLMScansFunctions</key>
    <true />
    <key>Language Features</key>
    <dict>
      <key>Comment Pattern</key>
      <string>(?x: (?&gt; // .* $ ) | (?&gt; /\* (?s:.*?) (?: \*/ | \z ) ) )</string>
      <key>Function Pattern</key>
      <string>(?x: (?P&lt;function&gt; (?P&lt;function_name&gt; (?&gt; _* [A-Za-z] [A-Za-z0-9_]* ) (?: (?: (?&gt; (?&gt; \s+ ) | (?P&gt;comment) | (?P&gt;string) ) )* :: (?: (?&gt; (?&gt; \s+ ) | (?P&gt;comment) | (?P&gt;string) ) )* ~? _* [A-Za-z] [A-Za-z0-9_]* )? ) (?: (?&gt; (?&gt; \s+ ) | (?P&gt;comment) | (?P&gt;string) ) )* (?P&lt;parens&gt; \( (?: (?&gt; (?&gt; [^'"()]+ ) | (?: / (?![/*]) ) | (?P&gt;comment) | (?P&gt;string) | (?P&gt;parens) ) )* \) ) (?: (?&gt; (?&gt; \s+ ) | (?P&gt;comment) | (?P&gt;string) ) )* (?: : (?: (?&gt; (?&gt; [^'"{]+ ) | (?: / (?![/*]) ) | (?P&gt;comment) | (?P&gt;string) ) )* )? (?P&lt;braces&gt; { (?: (?&gt; (?&gt; [^'"{}]+ ) | (?: / (?![/*]) ) | (?P&gt;comment) | (?P&gt;string) | (?P&gt;braces) ) )* } ) ) )</string>
      <key>Identifier and Keyword Character Class</key>
        <!--<string>0-9A-Z_a-z</string>-->
        <string><![CDATA[!$%&*;+-./,<=>?@^~0-9A-Z_a-z]]></string>
      <key>Skip Pattern</key>
      <string>(?x: (?&gt; (?P&gt;comment) | (?P&gt;string) ) )</string>
      <key>String Pattern</key>
      <string>(?x: (?&gt; " (?s: \\. | [^"] )*? (?: " | $) ) | (?&gt; ' (?s: \\. | [^'] )*? (?: ' | $) ) )</string>
    </dict>
  </dict>
</plist>
